server.port=8080
##kafka
#kafka producer
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.topic.producer=topic-one
spring.kafka.topic.consumer=topic-one
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#kafka consumer
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=group-id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
##mongo
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.username=root
spring.data.mongodb.password=root
spring.data.mongodb.database=demo
spring.data.mongodb.port=27017
spring.data.mongodb.host=localhost
spring.data.mongodb.auto-index-creation=true
##Product
item.products[0].id=1
item.products[0].description=Spotify
item.products[0].acceptAutomatic=true
item.products[0].strategy=RULE_SPOTIFY
item.products[0].timeValidOffer=1000
item.products[0].minAge=18
item.products[1].id=2
item.products[1].description=Deezer
item.products[1].acceptAutomatic=true
item.products[1].strategy=RULE_DEEZER
item.products[1].timeValidOffer=1000
item.products[1].minAge=18
